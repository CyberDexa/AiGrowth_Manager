"""add published_posts table

Revision ID: 02f2fa21dac3
Revises: a1b2c3d4e5f6
Create Date: 2025-10-13 02:33:36.875643+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '02f2fa21dac3'
down_revision: Union[str, None] = 'a1b2c3d4e5f6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_content_metrics_content_id', table_name='content_metrics')
    op.drop_index('ix_content_metrics_id', table_name='content_metrics')
    op.drop_table('content_metrics')
    op.drop_index('ix_business_metrics_business_id', table_name='business_metrics')
    op.drop_index('ix_business_metrics_id', table_name='business_metrics')
    op.drop_table('business_metrics')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('business_metrics',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('business_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('total_posts', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('total_reach', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('total_engagement', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('avg_engagement_rate', sa.DOUBLE_PRECISION(precision=53), server_default=sa.text("'0'::double precision"), autoincrement=False, nullable=True),
    sa.Column('platform_breakdown', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('period_start', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('period_end', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['business_id'], ['businesses.id'], name='business_metrics_business_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='business_metrics_pkey')
    )
    op.create_index('ix_business_metrics_id', 'business_metrics', ['id'], unique=False)
    op.create_index('ix_business_metrics_business_id', 'business_metrics', ['business_id'], unique=False)
    op.create_table('content_metrics',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('content_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('views', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('likes', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('shares', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('comments', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('clicks', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('engagement_rate', sa.DOUBLE_PRECISION(precision=53), server_default=sa.text("'0'::double precision"), autoincrement=False, nullable=True),
    sa.Column('click_through_rate', sa.DOUBLE_PRECISION(precision=53), server_default=sa.text("'0'::double precision"), autoincrement=False, nullable=True),
    sa.Column('measured_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('platform_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['content_id'], ['content.id'], name='content_metrics_content_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='content_metrics_pkey')
    )
    op.create_index('ix_content_metrics_id', 'content_metrics', ['id'], unique=False)
    op.create_index('ix_content_metrics_content_id', 'content_metrics', ['content_id'], unique=False)
    # ### end Alembic commands ###
